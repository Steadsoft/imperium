//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.11.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Post.g4 by ANTLR 4.11.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IPostListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.11.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class PostBaseListener : IPostListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.translation_unit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTranslation_unit([NotNull] PostParser.Translation_unitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.translation_unit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTranslation_unit([NotNull] PostParser.Translation_unitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.procedure_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProcedure_stmt([NotNull] PostParser.Procedure_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.procedure_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProcedure_stmt([NotNull] PostParser.Procedure_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.stmt_block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStmt_block([NotNull] PostParser.Stmt_blockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.stmt_block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStmt_block([NotNull] PostParser.Stmt_blockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.terminator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTerminator([NotNull] PostParser.TerminatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.terminator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTerminator([NotNull] PostParser.TerminatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.label_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLabel_stmt([NotNull] PostParser.Label_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.label_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLabel_stmt([NotNull] PostParser.Label_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PRE</c>
	/// labeled alternative in <see cref="PostParser.nonexecutable_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPRE([NotNull] PostParser.PREContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PRE</c>
	/// labeled alternative in <see cref="PostParser.nonexecutable_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPRE([NotNull] PostParser.PREContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DCL</c>
	/// labeled alternative in <see cref="PostParser.nonexecutable_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDCL([NotNull] PostParser.DCLContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DCL</c>
	/// labeled alternative in <see cref="PostParser.nonexecutable_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDCL([NotNull] PostParser.DCLContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DEF</c>
	/// labeled alternative in <see cref="PostParser.nonexecutable_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDEF([NotNull] PostParser.DEFContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DEF</c>
	/// labeled alternative in <see cref="PostParser.nonexecutable_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDEF([NotNull] PostParser.DEFContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ASSIGN</c>
	/// labeled alternative in <see cref="PostParser.executable_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterASSIGN([NotNull] PostParser.ASSIGNContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ASSIGN</c>
	/// labeled alternative in <see cref="PostParser.executable_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitASSIGN([NotNull] PostParser.ASSIGNContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CALL</c>
	/// labeled alternative in <see cref="PostParser.executable_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCALL([NotNull] PostParser.CALLContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CALL</c>
	/// labeled alternative in <see cref="PostParser.executable_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCALL([NotNull] PostParser.CALLContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>GOTO</c>
	/// labeled alternative in <see cref="PostParser.executable_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGOTO([NotNull] PostParser.GOTOContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>GOTO</c>
	/// labeled alternative in <see cref="PostParser.executable_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGOTO([NotNull] PostParser.GOTOContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PROC</c>
	/// labeled alternative in <see cref="PostParser.executable_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPROC([NotNull] PostParser.PROCContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PROC</c>
	/// labeled alternative in <see cref="PostParser.executable_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPROC([NotNull] PostParser.PROCContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>RET</c>
	/// labeled alternative in <see cref="PostParser.executable_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRET([NotNull] PostParser.RETContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>RET</c>
	/// labeled alternative in <see cref="PostParser.executable_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRET([NotNull] PostParser.RETContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IF</c>
	/// labeled alternative in <see cref="PostParser.executable_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIF([NotNull] PostParser.IFContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IF</c>
	/// labeled alternative in <see cref="PostParser.executable_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIF([NotNull] PostParser.IFContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>LOOP</c>
	/// labeled alternative in <see cref="PostParser.executable_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLOOP([NotNull] PostParser.LOOPContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>LOOP</c>
	/// labeled alternative in <see cref="PostParser.executable_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLOOP([NotNull] PostParser.LOOPContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>LEAVE</c>
	/// labeled alternative in <see cref="PostParser.executable_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLEAVE([NotNull] PostParser.LEAVEContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>LEAVE</c>
	/// labeled alternative in <see cref="PostParser.executable_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLEAVE([NotNull] PostParser.LEAVEContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>AGAIN</c>
	/// labeled alternative in <see cref="PostParser.executable_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAGAIN([NotNull] PostParser.AGAINContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AGAIN</c>
	/// labeled alternative in <see cref="PostParser.executable_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAGAIN([NotNull] PostParser.AGAINContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.preprocessor_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPreprocessor_stmt([NotNull] PostParser.Preprocessor_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.preprocessor_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPreprocessor_stmt([NotNull] PostParser.Preprocessor_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.assign_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssign_stmt([NotNull] PostParser.Assign_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.assign_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssign_stmt([NotNull] PostParser.Assign_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>BASIC_REF</c>
	/// labeled alternative in <see cref="PostParser.reference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBASIC_REF([NotNull] PostParser.BASIC_REFContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BASIC_REF</c>
	/// labeled alternative in <see cref="PostParser.reference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBASIC_REF([NotNull] PostParser.BASIC_REFContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PTR_REF</c>
	/// labeled alternative in <see cref="PostParser.reference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPTR_REF([NotNull] PostParser.PTR_REFContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PTR_REF</c>
	/// labeled alternative in <see cref="PostParser.reference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPTR_REF([NotNull] PostParser.PTR_REFContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArguments([NotNull] PostParser.ArgumentsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArguments([NotNull] PostParser.ArgumentsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.arguments_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArguments_list([NotNull] PostParser.Arguments_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.arguments_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArguments_list([NotNull] PostParser.Arguments_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.basic_reference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBasic_reference([NotNull] PostParser.Basic_referenceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.basic_reference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBasic_reference([NotNull] PostParser.Basic_referenceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.structure_qualification"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructure_qualification([NotNull] PostParser.Structure_qualificationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.structure_qualification"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructure_qualification([NotNull] PostParser.Structure_qualificationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.structure_qualification_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructure_qualification_list([NotNull] PostParser.Structure_qualification_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.structure_qualification_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructure_qualification_list([NotNull] PostParser.Structure_qualification_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.subscript"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubscript([NotNull] PostParser.SubscriptContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.subscript"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubscript([NotNull] PostParser.SubscriptContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.subscript_commalist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubscript_commalist([NotNull] PostParser.Subscript_commalistContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.subscript_commalist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubscript_commalist([NotNull] PostParser.Subscript_commalistContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] PostParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] PostParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.expression_9"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_9([NotNull] PostParser.Expression_9Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.expression_9"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_9([NotNull] PostParser.Expression_9Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.expression_8"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_8([NotNull] PostParser.Expression_8Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.expression_8"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_8([NotNull] PostParser.Expression_8Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.expression_7"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_7([NotNull] PostParser.Expression_7Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.expression_7"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_7([NotNull] PostParser.Expression_7Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.expression_6"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_6([NotNull] PostParser.Expression_6Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.expression_6"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_6([NotNull] PostParser.Expression_6Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.expression_5"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_5([NotNull] PostParser.Expression_5Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.expression_5"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_5([NotNull] PostParser.Expression_5Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.expression_4"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_4([NotNull] PostParser.Expression_4Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.expression_4"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_4([NotNull] PostParser.Expression_4Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.expression_3"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_3([NotNull] PostParser.Expression_3Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.expression_3"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_3([NotNull] PostParser.Expression_3Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.expression_2"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_2([NotNull] PostParser.Expression_2Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.expression_2"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_2([NotNull] PostParser.Expression_2Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.expression_1"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_1([NotNull] PostParser.Expression_1Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.expression_1"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_1([NotNull] PostParser.Expression_1Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.prefix_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrefix_expression([NotNull] PostParser.Prefix_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.prefix_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrefix_expression([NotNull] PostParser.Prefix_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.parenthesized_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesized_expression([NotNull] PostParser.Parenthesized_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.parenthesized_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesized_expression([NotNull] PostParser.Parenthesized_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.primitive_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitive_expression([NotNull] PostParser.Primitive_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.primitive_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitive_expression([NotNull] PostParser.Primitive_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.prefix_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrefix_operator([NotNull] PostParser.Prefix_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.prefix_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrefix_operator([NotNull] PostParser.Prefix_operatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.comparison_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparison_operator([NotNull] PostParser.Comparison_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.comparison_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparison_operator([NotNull] PostParser.Comparison_operatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.shift_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShift_operator([NotNull] PostParser.Shift_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.shift_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShift_operator([NotNull] PostParser.Shift_operatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>KEYWD</c>
	/// labeled alternative in <see cref="PostParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKEYWD([NotNull] PostParser.KEYWDContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>KEYWD</c>
	/// labeled alternative in <see cref="PostParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKEYWD([NotNull] PostParser.KEYWDContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>identifier_IDENTIFIER</c>
	/// labeled alternative in <see cref="PostParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier_IDENTIFIER([NotNull] PostParser.Identifier_IDENTIFIERContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>identifier_IDENTIFIER</c>
	/// labeled alternative in <see cref="PostParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier_IDENTIFIER([NotNull] PostParser.Identifier_IDENTIFIERContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKeyword([NotNull] PostParser.KeywordContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKeyword([NotNull] PostParser.KeywordContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.call_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCall_stmt([NotNull] PostParser.Call_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.call_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCall_stmt([NotNull] PostParser.Call_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.goto_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGoto_stmt([NotNull] PostParser.Goto_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.goto_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGoto_stmt([NotNull] PostParser.Goto_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.end_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnd_stmt([NotNull] PostParser.End_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.end_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnd_stmt([NotNull] PostParser.End_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.endloop_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEndloop_stmt([NotNull] PostParser.Endloop_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.endloop_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEndloop_stmt([NotNull] PostParser.Endloop_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.reloop_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReloop_stmt([NotNull] PostParser.Reloop_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.reloop_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReloop_stmt([NotNull] PostParser.Reloop_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.declare_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclare_stmt([NotNull] PostParser.Declare_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.declare_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclare_stmt([NotNull] PostParser.Declare_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.type_info"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_info([NotNull] PostParser.Type_infoContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.type_info"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_info([NotNull] PostParser.Type_infoContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.dimension_suffix"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDimension_suffix([NotNull] PostParser.Dimension_suffixContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.dimension_suffix"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDimension_suffix([NotNull] PostParser.Dimension_suffixContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.bound_pair"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBound_pair([NotNull] PostParser.Bound_pairContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.bound_pair"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBound_pair([NotNull] PostParser.Bound_pairContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.bound_pair_commalist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBound_pair_commalist([NotNull] PostParser.Bound_pair_commalistContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.bound_pair_commalist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBound_pair_commalist([NotNull] PostParser.Bound_pair_commalistContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.lower_bound"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLower_bound([NotNull] PostParser.Lower_boundContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.lower_bound"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLower_bound([NotNull] PostParser.Lower_boundContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.upper_bound"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUpper_bound([NotNull] PostParser.Upper_boundContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.upper_bound"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUpper_bound([NotNull] PostParser.Upper_boundContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttribute([NotNull] PostParser.AttributeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttribute([NotNull] PostParser.AttributeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>BIN</c>
	/// labeled alternative in <see cref="PostParser.data_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBIN([NotNull] PostParser.BINContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BIN</c>
	/// labeled alternative in <see cref="PostParser.data_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBIN([NotNull] PostParser.BINContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DEC</c>
	/// labeled alternative in <see cref="PostParser.data_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDEC([NotNull] PostParser.DECContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DEC</c>
	/// labeled alternative in <see cref="PostParser.data_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDEC([NotNull] PostParser.DECContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PTR</c>
	/// labeled alternative in <see cref="PostParser.data_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPTR([NotNull] PostParser.PTRContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PTR</c>
	/// labeled alternative in <see cref="PostParser.data_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPTR([NotNull] PostParser.PTRContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>BIT</c>
	/// labeled alternative in <see cref="PostParser.data_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBIT([NotNull] PostParser.BITContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BIT</c>
	/// labeled alternative in <see cref="PostParser.data_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBIT([NotNull] PostParser.BITContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CHAR</c>
	/// labeled alternative in <see cref="PostParser.data_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCHAR([NotNull] PostParser.CHARContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CHAR</c>
	/// labeled alternative in <see cref="PostParser.data_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCHAR([NotNull] PostParser.CHARContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>STR</c>
	/// labeled alternative in <see cref="PostParser.data_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSTR([NotNull] PostParser.STRContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>STR</c>
	/// labeled alternative in <see cref="PostParser.data_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSTR([NotNull] PostParser.STRContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ENT</c>
	/// labeled alternative in <see cref="PostParser.data_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterENT([NotNull] PostParser.ENTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ENT</c>
	/// labeled alternative in <see cref="PostParser.data_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitENT([NotNull] PostParser.ENTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>FIX</c>
	/// labeled alternative in <see cref="PostParser.data_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFIX([NotNull] PostParser.FIXContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>FIX</c>
	/// labeled alternative in <see cref="PostParser.data_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFIX([NotNull] PostParser.FIXContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>FLT</c>
	/// labeled alternative in <see cref="PostParser.data_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFLT([NotNull] PostParser.FLTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>FLT</c>
	/// labeled alternative in <see cref="PostParser.data_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFLT([NotNull] PostParser.FLTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>OFF</c>
	/// labeled alternative in <see cref="PostParser.data_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOFF([NotNull] PostParser.OFFContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>OFF</c>
	/// labeled alternative in <see cref="PostParser.data_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOFF([NotNull] PostParser.OFFContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>VNG</c>
	/// labeled alternative in <see cref="PostParser.data_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVNG([NotNull] PostParser.VNGContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>VNG</c>
	/// labeled alternative in <see cref="PostParser.data_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVNG([NotNull] PostParser.VNGContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>COR</c>
	/// labeled alternative in <see cref="PostParser.data_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCOR([NotNull] PostParser.CORContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>COR</c>
	/// labeled alternative in <see cref="PostParser.data_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCOR([NotNull] PostParser.CORContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>COF</c>
	/// labeled alternative in <see cref="PostParser.data_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCOF([NotNull] PostParser.COFContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>COF</c>
	/// labeled alternative in <see cref="PostParser.data_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCOF([NotNull] PostParser.COFContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>BLTN</c>
	/// labeled alternative in <see cref="PostParser.data_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBLTN([NotNull] PostParser.BLTNContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BLTN</c>
	/// labeled alternative in <see cref="PostParser.data_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBLTN([NotNull] PostParser.BLTNContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>INTR</c>
	/// labeled alternative in <see cref="PostParser.data_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterINTR([NotNull] PostParser.INTRContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>INTR</c>
	/// labeled alternative in <see cref="PostParser.data_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitINTR([NotNull] PostParser.INTRContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IDENT</c>
	/// labeled alternative in <see cref="PostParser.data_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIDENT([NotNull] PostParser.IDENTContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IDENT</c>
	/// labeled alternative in <see cref="PostParser.data_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIDENT([NotNull] PostParser.IDENTContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.precision"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrecision([NotNull] PostParser.PrecisionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.precision"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrecision([NotNull] PostParser.PrecisionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.number_of_digits"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumber_of_digits([NotNull] PostParser.Number_of_digitsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.number_of_digits"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumber_of_digits([NotNull] PostParser.Number_of_digitsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.scale_factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterScale_factor([NotNull] PostParser.Scale_factorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.scale_factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitScale_factor([NotNull] PostParser.Scale_factorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.max_length"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMax_length([NotNull] PostParser.Max_lengthContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.max_length"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMax_length([NotNull] PostParser.Max_lengthContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.based"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBased([NotNull] PostParser.BasedContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.based"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBased([NotNull] PostParser.BasedContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.defined"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefined([NotNull] PostParser.DefinedContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.defined"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefined([NotNull] PostParser.DefinedContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.entry_information"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEntry_information([NotNull] PostParser.Entry_informationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.entry_information"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEntry_information([NotNull] PostParser.Entry_informationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.coprocedure_specifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCoprocedure_specifier([NotNull] PostParser.Coprocedure_specifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.coprocedure_specifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCoprocedure_specifier([NotNull] PostParser.Coprocedure_specifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.parameter_name_commalist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameter_name_commalist([NotNull] PostParser.Parameter_name_commalistContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.parameter_name_commalist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameter_name_commalist([NotNull] PostParser.Parameter_name_commalistContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.returns_descriptor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturns_descriptor([NotNull] PostParser.Returns_descriptorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.returns_descriptor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturns_descriptor([NotNull] PostParser.Returns_descriptorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.return_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturn_stmt([NotNull] PostParser.Return_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.return_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturn_stmt([NotNull] PostParser.Return_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.if_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIf_stmt([NotNull] PostParser.If_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.if_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIf_stmt([NotNull] PostParser.If_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.then_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterThen_clause([NotNull] PostParser.Then_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.then_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitThen_clause([NotNull] PostParser.Then_clauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.else_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElse_clause([NotNull] PostParser.Else_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.else_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElse_clause([NotNull] PostParser.Else_clauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.elif_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElif_clause([NotNull] PostParser.Elif_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.elif_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElif_clause([NotNull] PostParser.Elif_clauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>BASIC_LOOP</c>
	/// labeled alternative in <see cref="PostParser.loop_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBASIC_LOOP([NotNull] PostParser.BASIC_LOOPContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BASIC_LOOP</c>
	/// labeled alternative in <see cref="PostParser.loop_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBASIC_LOOP([NotNull] PostParser.BASIC_LOOPContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>WHILE_UNTIL</c>
	/// labeled alternative in <see cref="PostParser.loop_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWHILE_UNTIL([NotNull] PostParser.WHILE_UNTILContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>WHILE_UNTIL</c>
	/// labeled alternative in <see cref="PostParser.loop_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWHILE_UNTIL([NotNull] PostParser.WHILE_UNTILContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>UNTIL_WHILE</c>
	/// labeled alternative in <see cref="PostParser.loop_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUNTIL_WHILE([NotNull] PostParser.UNTIL_WHILEContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>UNTIL_WHILE</c>
	/// labeled alternative in <see cref="PostParser.loop_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUNTIL_WHILE([NotNull] PostParser.UNTIL_WHILEContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.while_option"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhile_option([NotNull] PostParser.While_optionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.while_option"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhile_option([NotNull] PostParser.While_optionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.until_option"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUntil_option([NotNull] PostParser.Until_optionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.until_option"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUntil_option([NotNull] PostParser.Until_optionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.define_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefine_stmt([NotNull] PostParser.Define_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.define_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefine_stmt([NotNull] PostParser.Define_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.numeric_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumeric_literal([NotNull] PostParser.Numeric_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.numeric_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumeric_literal([NotNull] PostParser.Numeric_literalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.hexadecimal_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHexadecimal_literal([NotNull] PostParser.Hexadecimal_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.hexadecimal_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHexadecimal_literal([NotNull] PostParser.Hexadecimal_literalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.octal_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOctal_literal([NotNull] PostParser.Octal_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.octal_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOctal_literal([NotNull] PostParser.Octal_literalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.decimal_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDecimal_literal([NotNull] PostParser.Decimal_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.decimal_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDecimal_literal([NotNull] PostParser.Decimal_literalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="PostParser.binary_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBinary_literal([NotNull] PostParser.Binary_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PostParser.binary_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBinary_literal([NotNull] PostParser.Binary_literalContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
