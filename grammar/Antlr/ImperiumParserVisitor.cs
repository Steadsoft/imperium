//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.11.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ImperiumParser.g4 by ANTLR 4.11.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="ImperiumParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.11.1")]
[System.CLSCompliant(false)]
public interface IImperiumParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.translation_unit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTranslation_unit([NotNull] ImperiumParser.Translation_unitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.procedure_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProcedure_stmt([NotNull] ImperiumParser.Procedure_stmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.stmt_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStmt_block([NotNull] ImperiumParser.Stmt_blockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.terminator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTerminator([NotNull] ImperiumParser.TerminatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.label_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLabel_stmt([NotNull] ImperiumParser.Label_stmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PRE</c>
	/// labeled alternative in <see cref="ImperiumParser.nonexecutable_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPRE([NotNull] ImperiumParser.PREContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DCL</c>
	/// labeled alternative in <see cref="ImperiumParser.nonexecutable_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDCL([NotNull] ImperiumParser.DCLContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DEF</c>
	/// labeled alternative in <see cref="ImperiumParser.nonexecutable_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDEF([NotNull] ImperiumParser.DEFContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ASSIGN</c>
	/// labeled alternative in <see cref="ImperiumParser.executable_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitASSIGN([NotNull] ImperiumParser.ASSIGNContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CALL</c>
	/// labeled alternative in <see cref="ImperiumParser.executable_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCALL([NotNull] ImperiumParser.CALLContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>GOTO</c>
	/// labeled alternative in <see cref="ImperiumParser.executable_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGOTO([NotNull] ImperiumParser.GOTOContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PROC</c>
	/// labeled alternative in <see cref="ImperiumParser.executable_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPROC([NotNull] ImperiumParser.PROCContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>RET</c>
	/// labeled alternative in <see cref="ImperiumParser.executable_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRET([NotNull] ImperiumParser.RETContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IF</c>
	/// labeled alternative in <see cref="ImperiumParser.executable_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIF([NotNull] ImperiumParser.IFContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>LOOP</c>
	/// labeled alternative in <see cref="ImperiumParser.executable_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLOOP([NotNull] ImperiumParser.LOOPContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>LEAVE</c>
	/// labeled alternative in <see cref="ImperiumParser.executable_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLEAVE([NotNull] ImperiumParser.LEAVEContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AGAIN</c>
	/// labeled alternative in <see cref="ImperiumParser.executable_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAGAIN([NotNull] ImperiumParser.AGAINContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.preprocessor_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreprocessor_stmt([NotNull] ImperiumParser.Preprocessor_stmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.assign_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssign_stmt([NotNull] ImperiumParser.Assign_stmtContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BASIC_REF</c>
	/// labeled alternative in <see cref="ImperiumParser.reference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBASIC_REF([NotNull] ImperiumParser.BASIC_REFContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PTR_REF</c>
	/// labeled alternative in <see cref="ImperiumParser.reference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPTR_REF([NotNull] ImperiumParser.PTR_REFContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArguments([NotNull] ImperiumParser.ArgumentsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.arguments_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArguments_list([NotNull] ImperiumParser.Arguments_listContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.basic_reference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBasic_reference([NotNull] ImperiumParser.Basic_referenceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.structure_qualification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructure_qualification([NotNull] ImperiumParser.Structure_qualificationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.structure_qualification_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructure_qualification_list([NotNull] ImperiumParser.Structure_qualification_listContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.subscript"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubscript([NotNull] ImperiumParser.SubscriptContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.subscript_commalist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubscript_commalist([NotNull] ImperiumParser.Subscript_commalistContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] ImperiumParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.expression_9"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression_9([NotNull] ImperiumParser.Expression_9Context context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.expression_8"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression_8([NotNull] ImperiumParser.Expression_8Context context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.expression_7"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression_7([NotNull] ImperiumParser.Expression_7Context context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.expression_6"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression_6([NotNull] ImperiumParser.Expression_6Context context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.expression_5"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression_5([NotNull] ImperiumParser.Expression_5Context context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.expression_4"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression_4([NotNull] ImperiumParser.Expression_4Context context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.expression_3"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression_3([NotNull] ImperiumParser.Expression_3Context context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.expression_2"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression_2([NotNull] ImperiumParser.Expression_2Context context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.expression_1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression_1([NotNull] ImperiumParser.Expression_1Context context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.prefix_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrefix_expression([NotNull] ImperiumParser.Prefix_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.parenthesized_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthesized_expression([NotNull] ImperiumParser.Parenthesized_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.primitive_expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitive_expression([NotNull] ImperiumParser.Primitive_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.prefix_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrefix_operator([NotNull] ImperiumParser.Prefix_operatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.comparison_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparison_operator([NotNull] ImperiumParser.Comparison_operatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.shift_operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShift_operator([NotNull] ImperiumParser.Shift_operatorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>KEYWD</c>
	/// labeled alternative in <see cref="ImperiumParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKEYWD([NotNull] ImperiumParser.KEYWDContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>identifier_IDENTIFIER</c>
	/// labeled alternative in <see cref="ImperiumParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifier_IDENTIFIER([NotNull] ImperiumParser.Identifier_IDENTIFIERContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKeyword([NotNull] ImperiumParser.KeywordContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.call_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCall_stmt([NotNull] ImperiumParser.Call_stmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.goto_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGoto_stmt([NotNull] ImperiumParser.Goto_stmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.end_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnd_stmt([NotNull] ImperiumParser.End_stmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.endloop_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEndloop_stmt([NotNull] ImperiumParser.Endloop_stmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.reloop_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReloop_stmt([NotNull] ImperiumParser.Reloop_stmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.declare_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclare_stmt([NotNull] ImperiumParser.Declare_stmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.type_info"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType_info([NotNull] ImperiumParser.Type_infoContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.dimension_suffix"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDimension_suffix([NotNull] ImperiumParser.Dimension_suffixContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.bound_pair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBound_pair([NotNull] ImperiumParser.Bound_pairContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.bound_pair_commalist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBound_pair_commalist([NotNull] ImperiumParser.Bound_pair_commalistContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.lower_bound"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLower_bound([NotNull] ImperiumParser.Lower_boundContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.upper_bound"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUpper_bound([NotNull] ImperiumParser.Upper_boundContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAttribute([NotNull] ImperiumParser.AttributeContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BIN</c>
	/// labeled alternative in <see cref="ImperiumParser.data_attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBIN([NotNull] ImperiumParser.BINContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DEC</c>
	/// labeled alternative in <see cref="ImperiumParser.data_attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDEC([NotNull] ImperiumParser.DECContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PTR</c>
	/// labeled alternative in <see cref="ImperiumParser.data_attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPTR([NotNull] ImperiumParser.PTRContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BIT</c>
	/// labeled alternative in <see cref="ImperiumParser.data_attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBIT([NotNull] ImperiumParser.BITContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>CHAR</c>
	/// labeled alternative in <see cref="ImperiumParser.data_attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCHAR([NotNull] ImperiumParser.CHARContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>STR</c>
	/// labeled alternative in <see cref="ImperiumParser.data_attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSTR([NotNull] ImperiumParser.STRContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ENT</c>
	/// labeled alternative in <see cref="ImperiumParser.data_attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitENT([NotNull] ImperiumParser.ENTContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>FIX</c>
	/// labeled alternative in <see cref="ImperiumParser.data_attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFIX([NotNull] ImperiumParser.FIXContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>FLT</c>
	/// labeled alternative in <see cref="ImperiumParser.data_attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFLT([NotNull] ImperiumParser.FLTContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>OFF</c>
	/// labeled alternative in <see cref="ImperiumParser.data_attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOFF([NotNull] ImperiumParser.OFFContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VNG</c>
	/// labeled alternative in <see cref="ImperiumParser.data_attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVNG([NotNull] ImperiumParser.VNGContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>COR</c>
	/// labeled alternative in <see cref="ImperiumParser.data_attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCOR([NotNull] ImperiumParser.CORContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>COF</c>
	/// labeled alternative in <see cref="ImperiumParser.data_attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCOF([NotNull] ImperiumParser.COFContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BLTN</c>
	/// labeled alternative in <see cref="ImperiumParser.data_attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBLTN([NotNull] ImperiumParser.BLTNContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>INTR</c>
	/// labeled alternative in <see cref="ImperiumParser.data_attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitINTR([NotNull] ImperiumParser.INTRContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.precision"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrecision([NotNull] ImperiumParser.PrecisionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.number_of_digits"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumber_of_digits([NotNull] ImperiumParser.Number_of_digitsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.scale_factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitScale_factor([NotNull] ImperiumParser.Scale_factorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.max_length"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMax_length([NotNull] ImperiumParser.Max_lengthContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.based"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBased([NotNull] ImperiumParser.BasedContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.defined"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDefined([NotNull] ImperiumParser.DefinedContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.entry_information"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEntry_information([NotNull] ImperiumParser.Entry_informationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.coprocedure_specifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCoprocedure_specifier([NotNull] ImperiumParser.Coprocedure_specifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.parameter_name_commalist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameter_name_commalist([NotNull] ImperiumParser.Parameter_name_commalistContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.returns_descriptor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturns_descriptor([NotNull] ImperiumParser.Returns_descriptorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.return_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturn_stmt([NotNull] ImperiumParser.Return_stmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.if_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIf_stmt([NotNull] ImperiumParser.If_stmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.then_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitThen_clause([NotNull] ImperiumParser.Then_clauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.else_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElse_clause([NotNull] ImperiumParser.Else_clauseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.elif_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElif_clause([NotNull] ImperiumParser.Elif_clauseContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BASIC_LOOP</c>
	/// labeled alternative in <see cref="ImperiumParser.loop_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBASIC_LOOP([NotNull] ImperiumParser.BASIC_LOOPContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>WHILE_UNTIL</c>
	/// labeled alternative in <see cref="ImperiumParser.loop_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWHILE_UNTIL([NotNull] ImperiumParser.WHILE_UNTILContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>UNTIL_WHILE</c>
	/// labeled alternative in <see cref="ImperiumParser.loop_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUNTIL_WHILE([NotNull] ImperiumParser.UNTIL_WHILEContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.while_option"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhile_option([NotNull] ImperiumParser.While_optionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.until_option"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUntil_option([NotNull] ImperiumParser.Until_optionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.define_stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDefine_stmt([NotNull] ImperiumParser.Define_stmtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.numeric_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumeric_literal([NotNull] ImperiumParser.Numeric_literalContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.hexadecimal_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHexadecimal_literal([NotNull] ImperiumParser.Hexadecimal_literalContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.octal_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOctal_literal([NotNull] ImperiumParser.Octal_literalContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.decimal_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecimal_literal([NotNull] ImperiumParser.Decimal_literalContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ImperiumParser.binary_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBinary_literal([NotNull] ImperiumParser.Binary_literalContext context);
}
