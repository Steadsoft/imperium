/*------------------------------------------------------------------------*/
/* Each language must define the same number of keywords as English.      */
/* Abbreviations for keywords are permitted by using a comma as the       */
/* separator.                                                             */
/* The left hand names are standardized but always converted to upper     */
/* case when the grammar text is generated, these names are referenced    */
/* by the grammar's parsing rules.                                        */
/*------------------------------------------------------------------------*/

{

  "en": { // English
    "Aligned": "aligned",
    "Argument": "argument, arg",
    "Automatic": "automatic, auto",
    "Based": "based",
    "Binary": "binary, bin",
    "Bit": "bit",
    "Boolean": "boolean, bool",
    "Builtin": "builtin",
    "By": "by",
    "Bypass": "bypass",
    "Call": "call",
    "Character": "character, char",
    "Cofunction": "cofunction",
    "Coroutine": "coroutine",
    "Decimal": "decimal, dec",
    "Declare": "declare, dcl",
    "Define": "define, def",
    "Defined": "defined",
    "Elif": "elif",
    "Else": "else",
    "End": "end",
    "Endloop": "endloop",
    "Entry": "entry",
    "Enum": "enum",
    "Fixed": "fixed",
    "Float": "float",
    "Function": "function, func",
    "Goto": "goto, go to",
    "If": "if",
    "Inc": "inc",
    "Include": "include, inc",
    "Internal": "internal",
    "Interrupt": "interrupt",
    "Intrinsic": "intrinsic",
    "Language": "lingua",
    "Loop": "loop",
    "Namespace": "namespace",
    "Offset": "offset",
    "Out": "out",
    "Pad": "pad",
    "Pointer": "pointer, ptr",
    "Private": "private",
    "Procedure": "procedure, proc",
    "Public": "public",
    "Readonly": "readonly",
    "Ref": "ref",
    "Reloop": "reloop",
    "Return": "return",
    "Returns": "returns",
    "Returnon": "returnon",
    "Singlet": "singlet",
    "Static": "static",
    "String": "string",
    "Structure": "structure, struct",
    "Then": "then",
    "To": "to",
    "Type": "type",
    "Unaligned": "unaligned",
    "Until": "until",
    "Using": "using",
    "While": "while",
    "Variable": "variable",
    "Varying": "varying",
    "Yield": "yield"
  },
  "fr": { // French
    "Aligned": "aligné",
    "Argument": "argument",
    "Automatic": "automatique, auto",
    "Based": "based",
    "Binary": "binaire",
    "Bit": "bit",
    "Boolean": "booléenne",
    "Builtin": "intégré",
    "By": "by",
    "Bypass": "bypass",
    "Call": "appeler",
    "Character": "character",
    "Cofunction": "cofunction",
    "Coroutine": "coroutine",
    "Decimal": "décimal",
    "Declare": "déclarer",
    "Define": "define",
    "Defined": "defined",
    "Elif": "elif",
    "Else": "autre",
    "End": "fin",
    "Endloop": "endloop",
    "Entry": "entry",
    "Enum": "enum",
    "Fixed": "fixe",
    "Float": "flottant",
    "Function": "fonction",
    "Goto": "aller à",
    "If": "si",
    "Inc": "inc",
    "Include": "comprendre",
    "Internal": "interne",
    "Interrupt": "interrompre",
    "Intrinsic": "intrinsic",
    "Language": "lingua",
    "Loop": "boucle",
    "Namespace": "namespace",
    "Offset": "offset",
    "Out": "depuis",
    "Pad": "pad",
    "Pointer": "pointer",
    "Private": "privé",
    "Procedure": "procédé",
    "Public": "public",
    "Readonly": "readonly",
    "Ref": "ref",
    "Reloop": "reloop",
    "Return": "retour",
    "Returns": "retours",
    "Returnon": "retour_si",
    "Singlet": "singlet",
    "Static": "static",
    "String": "chaîne",
    "Structure": "structure",
    "Then": "ensuite",
    "To": "to",
    "Type": "type",
    "Unaligned": "unaligned",
    "Until": "avant",
    "Using": "using",
    "While": "tandis que",
    "Variable": "variable",
    "Varying": "varying",
    "Yield": "donner"

  },
  "he": { // Hebrew
    "Aligned": "aligned",
    "Argument": "argument",
    "Binary": "binary",
    "Boolean": "boolean",
    "Builtin": "builtin",
    "By": "by",
    "Call": "call",
    "Coroutine": "coroutine",
    "Decimal": "decimal",
    "Declare": "declare",
    "Define": "define",
    "Else": "אחרת",
    "End": "end",
    "Enum": "enum",
    "Fixed": "fixed",
    "Float": "float",
    "Function": "function",
    "Goto": "goto",
    "If": "אם",
    "Internal": "internal",
    "Interrupt": "interrupt",
    "Language": "lingua",
    "Loop": "loop",
    "Namespace": "namespace",
    "Offset": "offset",
    "Out": "out",
    "Pad": "pad",
    "Pointer": "pointer",
    "Private": "private",
    "Procedure": "procedure",
    "Public": "public",
    "Readonly": "readonly",
    "Ref": "ref",
    "Return": "return",
    "Returnon": "returnon",
    "Singlet": "singlet",
    "Static": "static",
    "String": "string",
    "Structure": "structure",
    "To": "to",
    "Type": "type",
    "Unaligned": "unaligned",
    "Until": "until",
    "Using": "using",
    "While": "כלעוד",
    "Varying": "varying",
    "Yield": "yield"

  },
  "nl": { // Dutch
    "Argument": "argument",
    "Binary": "binair",
    "Boolean": "boolean",
    "Builtin": "ingebouwd",
    "By": "door",
    "Call": "aanroepen",
    "Coroutine": "co routine",
    "Decimal": "decimaal",
    "Declare": "declareer",
    "End": "einde",
    "Enum": "opsomming",
    "Fixed": "fixed",
    "Float": "float",
    "Function": "functie",
    "Goto": "ga",
    "If": "als",
    "Internal": "intern",
    "Interrupt": "interrupt",
    "Loop": "lus",
    "Namespace": "namespace",
    "Out": "out",
    "Private": "private",
    "Procedure": "procedure",
    "Public": "publiek",
    "Readonly": "alleen lezen",
    "Ref": "referentie",
    "Return": "terug",
    "Returnon": "terug bij",
    "Singlet": "singlet",
    "Static": "statisch",
    "String": "string",
    "Structure": "structuur",
    "To": "tot",
    "Type": "type",
    "Until": "totdat",
    "Using": "gebruikende",
    "While": "zolang",
    "Varying": "varierend",
    "Yield": "opbrengst"
  },

  "de": { // German
    "Aligned": "ausgerichtet",
    "Argument": "argument",
    "Automatic": "automatisch, auto",
    "Based": "based",
    "Binary": "binär",
    "Bit": "bit",
    "Boolean": "boolesch",
    "Builtin": "eingebaut",
    "By": "by",
    "Bypass": "bypass",
    "Call": "aufrufen",
    "Character": "character",
    "Cofunction": "cofunction",
    "Coroutine": "coroutine",
    "Decimal": "dezimal",
    "Declare": "deklarieren",
    "Define": "define",
    "Defined": "defined",
    "Elif": "elif",
    "Else": "anders",
    "End": "ende",
    "Endloop": "ende wiederholen",
    "Entry": "entry",
    "Enum": "enum",
    "Fixed": "stationär",
    "Float": "flottant",
    "Function": "fonction",
    "Goto": "gehen",
    "If": "wenn",
    "Inc": "inc",
    "Include": "enthalten",
    "Internal": "intern",
    "Interrupt": "unterbrechen",
    "Intrinsic": "intrinsisch",
    "Language": "lingua",
    "Loop": "wiederholen",
    "Namespace": "namespace",
    "Offset": "offset",
    "Out": "depuis",
    "Pad": "pad",
    "Pointer": "pointer",
    "Private": "privé",
    "Procedure": "routine",
    "Public": "öffentlich",
    "Readonly": "readonly",
    "Ref": "ref",
    "Reloop": "reloop",
    "Return": "rückkehr",
    "Returns": "rückkehrs",
    "Returnon": "retour_si",
    "Singlet": "singlet",
    "Static": "static",
    "String": "text",
    "Structure": "structure",
    "Then": "dann",
    "To": "to",
    "Type": "art",
    "Unaligned": "unaligned",
    "Until": "bis",
    "Using": "using",
    "While": "solang",
    "Variable": "variable",
    "Varying": "varying",
    "Yield": "abtreten"

  }

}
